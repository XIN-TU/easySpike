{"remainingRequest":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/views/Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/views/Search.vue","mtime":1617127893308},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/babel-loader/lib/index.js","mtime":1611951976731},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js","mtime":1611951979647}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport Recipe from '@/components/Recipe.vue'\nimport $backend from '../backend'\n\nconst plainOptions = ['Quick & Easy', 'Calories<500k', 'Gluten free', 'Vegetarian']\n// const defaultCheckedList = ['Apple', 'Orange'];\nconst defaultCheckedList = []\n\nexport default {\n  name: 'Search',\n  components: {\n    HelloWorld,\n    Recipe\n  },\n\n  data () {\n    return {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false,\n      plainOptions,\n      total: 20,\n      loading: true,\n      // posts: [{}, {}, {}],\n      posts: [],\n      currentPosts: [],\n      error: '',\n      // pageSizeOptions: ['5', '10', '15', '20', '50'],\n      current: 1,\n      pageSize: 6,\n      arrow1: 'arrow-up',\n      arrow2: 'arrow-up',\n      arrow3: 'arrow-up',\n      arrow4: 'arrow-up'\n    }\n  },\n  directives: {\n    trigger: {\n      inserted (el, bingbing) {\n        el.click()\n      }\n    }\n\n  },\n  methods: {\n    onChange (checkedList) {\n      this.indeterminate = !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n    },\n    handleSizeChange1 (e) {\n      this.arrow1 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow1)\n      this.onSortServing(e.target.value)\n    },\n    handleSizeChange2 (e) {\n      this.arrow2 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow2)\n      this.onSortCalories(e.target.value)\n    },\n    handleSizeChange3 (e) {\n      this.arrow3 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow3)\n      this.onSortTime(e.target.value)\n    },\n    handleSizeChange4 (e) {\n      this.arrow4 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow4)\n      this.onSortComments(e.target.value)\n    },\n    // showPage() {\n    //   this.currentPosts = this.posts.splice(0, this.pageSize)\n    // },\n    changePage () {\n      var i\n      this.currentPosts = []\n      console.log(this.current)\n      console.log(this.currentPosts.length)\n      var index = this.current * this.pageSize\n      if (index > this.posts.length) {\n        index = this.posts.length\n      }\n      for (i = (this.current * this.pageSize - this.pageSize); i < index; i++) {\n        this.currentPosts.push(this.posts[i])\n      }\n      console.log(this.currentPosts.length)\n      console.log('change it')\n    },\n\n    handleClick () {\n      this.loading = !this.loading\n    },\n    hi (value) {\n      console.log('chenggong')\n      this.posts = []\n      value = localStorage.getItem('accessToken')\n      console.log(value)\n      console.log(this.checkedList)\n      this.SearchEnter(value, this.checkedList)\n    },\n    onSearch (value) {\n      this.posts = []\n      if (value === '') {\n        value = localStorage.getItem('accessToken')\n      } else {}\n      console.log('test')\n      console.log(value)\n      console.log(this.checkedList)\n      this.SearchEnter(value, this.checkedList)\n    },\n    // fetchDemo10 () {\n    //   $backend\n    //     .fetchDemo10()\n    //     .then((responseData) => {\n    //       console.log(responseData[1])\n    //       // temp = JSON.parse(responseData);\n    //       console.log('being parsed')\n    //       // process the instructions and ingredients\n\n    //       var i\n    //       for (i = 0; i < responseData.length; i++) {\n    //         var tempInstruction = responseData[i].instructions\n    //         var tempIngredients = responseData[i].ingredients\n    //         responseData[i].instructions = tempInstruction.split('\\n')\n    //         responseData[i].ingredients = tempIngredients.split('\\n')\n    //         // console.log(tempInstruction, tempIngredients);\n    //         var j = 0\n    //         console.log(responseData[i].ingredients.length)\n    //         for (j; j < responseData[i].ingredients.length; j++) {\n    //           if (responseData[i].ingredients[j] === 'You might also like') {\n    //             break\n    //           }\n    //         }\n    //         responseData[i].ingredients = this.instructions.slice(0, j)\n    //         this.posts.push(responseData[i])\n    //       }\n\n    //       // this.posts.push(responseData);\n    //     })\n    //     .catch((error) => {\n    //       this.error = error.message\n    //     })\n    // },\n    SearchEnter (keywords, paras) {\n      console.log('sent the parameter: ' + keywords + ':' + paras)\n      $backend\n        .Search(keywords, paras)\n        .then((responseData) => {\n          console.log('being parsed')\n          // process the instructions and ingredients\n          var i\n          for (i = 0; i < responseData.length; i++) {\n            var tempInstruction = responseData[i].instructions\n            var tempIngredients = responseData[i].ingredients\n            console.log(tempInstruction)\n            try {\n              // var regexp1 = /(\\\\r\\\\n\\\\r\\\\n|\\\\r\\\\n|\\\\r\\\\n\\\\r)/\n              // tempInstruction = tempInstruction.replace(regexp1, '\\\\t')\n              var re = /You might also like\\(.|\\n\\)*/g\n              tempInstruction = tempInstruction.replace(re, '')\n              responseData[i].instructions = tempInstruction.split('\\n')\n              responseData[i].ingredients = tempIngredients.split('\\n')\n            } catch (error) {\n              this.error = error.message\n              continue\n            }\n            // console.log(tempInstruction, tempIngredients);\n            this.posts.push(responseData[i])\n          }\n          console.log('initial currentpost')\n          this.currentPosts = this.posts.slice(0, this.pageSize)\n          // this.posts.push(responseData);\n        })\n        .catch((error) => {\n          this.error = error.message\n        })\n    },\n\n    DEBUGprint () {\n      console.log()\n    },\n    onShowSizeChange (current, pageSize) {\n      this.pageSize = pageSize\n    },\n    onSortComments (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.comments, 10)\n          b = roughScale(b.comments, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.comments, 10)\n          b = roughScale(b.comments, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortTime (x) {\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          var str1 = a.time\n          var str2 = b.time\n          var list1 = str1.split(' ')\n          var list2 = str2.split(' ')\n          var num1 = 0\n          if (list1.length === 3) {\n            if ((list1[2] === 'hours') || (list1[2] === 'hour')) {\n              num1 = parseInt(list1[1]) * 60\n            } else if ((list1[2] === 'min') || (list1[2] === 'minutes')) {\n              num1 = parseInt(list1[1])\n            }\n          } else {\n            num1 = parseInt(list1[1]) * 60 + parseInt(list1[3])\n          }\n          var num2 = 0\n          if (list2.length === 3) {\n            if ((list2[2] === 'hours') || (list2[2] === 'hour')) {\n              num2 = parseInt(list2[1]) * 60\n            } else if ((list2[2] === 'min') || (list2[2] === 'minutes')) {\n              num2 = parseInt(list2[1])\n            }\n          } else {\n            num2 = parseInt(list1[2]) * 60 + parseInt(list1[2])\n          }\n          if (num1 < num2) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          var str1 = a.time\n          var str2 = b.time\n          var regexp = /[0-9]+/g\n          var list1 = str1.match(regexp)\n          var list2 = str2.match(regexp)\n          var num1 = 0\n          if (list1.length === 3) {\n            if (list1[2] === 'hours') {\n              num1 = parseInt(list1[1]) * 60\n            } else if ((list1[2] === 'min') || (list1[2] === 'minutes')) {\n              num1 = parseInt(list1[1])\n            }\n          } else {\n            num1 = parseInt(list1[1]) * 60 + parseInt(list1[3])\n          }\n          var num2 = 0\n          if (list2.length === 3) {\n            if (list2[2] === 'hours') {\n              num2 = parseInt(list2[1]) * 60\n            } else if ((list2[2] === 'min') || (list2[2] === 'minutes')) {\n              num2 = parseInt(list2[1])\n            }\n          } else {\n            num2 = parseInt(list1[2]) * 60 + parseInt(list1[2])\n          }\n          if (num1 > num2) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortServing (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          console.log(a.serving)\n          a = roughScale(a.serving, 10)\n          b = roughScale(b.serving, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.serving, 10)\n          b = roughScale(b.serving, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortCalories (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          let num1 = a.calories.replace(/[^\\d.]/g, '')\n          let num2 = b.calories.replace(/[^\\d.]/g, '')\n          a = roughScale(num1, 10)\n          b = roughScale(num2, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          let num1 = a.calories.replace(/[^\\d.]/g, '')\n          let num2 = b.calories.replace(/[^\\d.]/g, '')\n          a = roughScale(num1, 10)\n          b = roughScale(num2, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    }\n  }\n}\n\n",{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"Search.vue","sourceRoot":"src/views","sourcesContent":["\n<template>\n<div>\n  <a-carousel autoplay>\n    <div><h3><img src=\"@/assets/x1.jpg\" style=\"width: 100%;\"/></h3></div>\n    <div><h3><img src=\"@/assets/x2.jpg\" style=\"width: 100%;\"/></h3></div>\n    <div><h3><img src=\"@/assets/x3.jpg\" style=\"width: 100%;\"/></h3></div>\n    <div><h3><img src=\"@/assets/x4.jpg\" style=\"width: 100%;\"/></h3></div>\n  </a-carousel>\n\n  <div class=\"Search\" >\n    <a-input-search placeholder=\"input your recipe\" size=\"large\" @search=\"onSearch\">\n      <a-button slot=\"enterButton\">\n        Search\n      </a-button>\n    </a-input-search>\n        <a-button @click=\"hi\" type=\"link\" v-trigger >\n    </a-button>\n  </div>\n  <div>\n    <a-divider orientation=\"center\" style=\"font-size: 18px\">\n      RESULTS\n    </a-divider>\n    <a-checkbox-group v-model=\"checkedList\" :options=\"plainOptions\" @change=\"onChange\"  />\n    <br><br>\n    <a-button-group>\n      <a-button value='arrow-up' @click=\"handleSizeChange3\">Ready Time <a-icon :type='arrow3' />\n      </a-button>\n      <a-button value='arrow-up' @click=\"handleSizeChange1\">Num Serving <a-icon :type='arrow1' />\n      </a-button>\n      <a-button value='arrow-up' @click=\"handleSizeChange4\">Num Want To Try <a-icon :type='arrow4' />\n      </a-button>\n      <a-button value='arrow-up' @click=\"handleSizeChange2\">Calaries <a-icon :type='arrow2' />\n      </a-button>\n    </a-button-group>\n  </div>\n<div>\n</div>\n  <div class=\"parent\">\n      <Recipe v-for=\"post in currentPosts\" v-bind:key=\"post.id\" v-bind=\"post\"></Recipe>\n  </div>\n  <br/>\n  <br/>\n\n  <div id=\"components-pagination-demo-mini\" style=\"position: relative;margin-top: -60px; height: 60px;clear:both;\">\n    <a-pagination v-model=\"current\" :total=posts.length show-less-items :page-size=\"pageSize\"\n    @showSizeChange=\"onShowSizeChange\"\n    @change=\"changePage\"/>\n  </div>\n</div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\nimport Recipe from '@/components/Recipe.vue'\nimport $backend from '../backend'\n\nconst plainOptions = ['Quick & Easy', 'Calories<500k', 'Gluten free', 'Vegetarian']\n// const defaultCheckedList = ['Apple', 'Orange'];\nconst defaultCheckedList = []\n\nexport default {\n  name: 'Search',\n  components: {\n    HelloWorld,\n    Recipe\n  },\n\n  data () {\n    return {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false,\n      plainOptions,\n      total: 20,\n      loading: true,\n      // posts: [{}, {}, {}],\n      posts: [],\n      currentPosts: [],\n      error: '',\n      // pageSizeOptions: ['5', '10', '15', '20', '50'],\n      current: 1,\n      pageSize: 6,\n      arrow1: 'arrow-up',\n      arrow2: 'arrow-up',\n      arrow3: 'arrow-up',\n      arrow4: 'arrow-up'\n    }\n  },\n  directives: {\n    trigger: {\n      inserted (el, bingbing) {\n        el.click()\n      }\n    }\n\n  },\n  methods: {\n    onChange (checkedList) {\n      this.indeterminate = !!checkedList.length && checkedList.length < plainOptions.length\n      this.checkAll = checkedList.length === plainOptions.length\n    },\n    handleSizeChange1 (e) {\n      this.arrow1 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow1)\n      this.onSortServing(e.target.value)\n    },\n    handleSizeChange2 (e) {\n      this.arrow2 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow2)\n      this.onSortCalories(e.target.value)\n    },\n    handleSizeChange3 (e) {\n      this.arrow3 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow3)\n      this.onSortTime(e.target.value)\n    },\n    handleSizeChange4 (e) {\n      this.arrow4 = e.target.value\n      if (e.target.value === 'arrow-up') {\n        e.target.value = 'arrow-down'\n      } else if (e.target.value === 'arrow-down') {\n        e.target.value = 'arrow-up'\n      }\n      console.log(this.arrow4)\n      this.onSortComments(e.target.value)\n    },\n    // showPage() {\n    //   this.currentPosts = this.posts.splice(0, this.pageSize)\n    // },\n    changePage () {\n      var i\n      this.currentPosts = []\n      console.log(this.current)\n      console.log(this.currentPosts.length)\n      var index = this.current * this.pageSize\n      if (index > this.posts.length) {\n        index = this.posts.length\n      }\n      for (i = (this.current * this.pageSize - this.pageSize); i < index; i++) {\n        this.currentPosts.push(this.posts[i])\n      }\n      console.log(this.currentPosts.length)\n      console.log('change it')\n    },\n\n    handleClick () {\n      this.loading = !this.loading\n    },\n    hi (value) {\n      console.log('chenggong')\n      this.posts = []\n      value = localStorage.getItem('accessToken')\n      console.log(value)\n      console.log(this.checkedList)\n      this.SearchEnter(value, this.checkedList)\n    },\n    onSearch (value) {\n      this.posts = []\n      if (value === '') {\n        value = localStorage.getItem('accessToken')\n      } else {}\n      console.log('test')\n      console.log(value)\n      console.log(this.checkedList)\n      this.SearchEnter(value, this.checkedList)\n    },\n    // fetchDemo10 () {\n    //   $backend\n    //     .fetchDemo10()\n    //     .then((responseData) => {\n    //       console.log(responseData[1])\n    //       // temp = JSON.parse(responseData);\n    //       console.log('being parsed')\n    //       // process the instructions and ingredients\n\n    //       var i\n    //       for (i = 0; i < responseData.length; i++) {\n    //         var tempInstruction = responseData[i].instructions\n    //         var tempIngredients = responseData[i].ingredients\n    //         responseData[i].instructions = tempInstruction.split('\\n')\n    //         responseData[i].ingredients = tempIngredients.split('\\n')\n    //         // console.log(tempInstruction, tempIngredients);\n    //         var j = 0\n    //         console.log(responseData[i].ingredients.length)\n    //         for (j; j < responseData[i].ingredients.length; j++) {\n    //           if (responseData[i].ingredients[j] === 'You might also like') {\n    //             break\n    //           }\n    //         }\n    //         responseData[i].ingredients = this.instructions.slice(0, j)\n    //         this.posts.push(responseData[i])\n    //       }\n\n    //       // this.posts.push(responseData);\n    //     })\n    //     .catch((error) => {\n    //       this.error = error.message\n    //     })\n    // },\n    SearchEnter (keywords, paras) {\n      console.log('sent the parameter: ' + keywords + ':' + paras)\n      $backend\n        .Search(keywords, paras)\n        .then((responseData) => {\n          console.log('being parsed')\n          // process the instructions and ingredients\n          var i\n          for (i = 0; i < responseData.length; i++) {\n            var tempInstruction = responseData[i].instructions\n            var tempIngredients = responseData[i].ingredients\n            console.log(tempInstruction)\n            try {\n              // var regexp1 = /(\\\\r\\\\n\\\\r\\\\n|\\\\r\\\\n|\\\\r\\\\n\\\\r)/\n              // tempInstruction = tempInstruction.replace(regexp1, '\\\\t')\n              var re = /You might also like\\(.|\\n\\)*/g\n              tempInstruction = tempInstruction.replace(re, '')\n              responseData[i].instructions = tempInstruction.split('\\n')\n              responseData[i].ingredients = tempIngredients.split('\\n')\n            } catch (error) {\n              this.error = error.message\n              continue\n            }\n            // console.log(tempInstruction, tempIngredients);\n            this.posts.push(responseData[i])\n          }\n          console.log('initial currentpost')\n          this.currentPosts = this.posts.slice(0, this.pageSize)\n          // this.posts.push(responseData);\n        })\n        .catch((error) => {\n          this.error = error.message\n        })\n    },\n\n    DEBUGprint () {\n      console.log()\n    },\n    onShowSizeChange (current, pageSize) {\n      this.pageSize = pageSize\n    },\n    onSortComments (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.comments, 10)\n          b = roughScale(b.comments, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.comments, 10)\n          b = roughScale(b.comments, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortTime (x) {\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          var str1 = a.time\n          var str2 = b.time\n          var list1 = str1.split(' ')\n          var list2 = str2.split(' ')\n          var num1 = 0\n          if (list1.length === 3) {\n            if ((list1[2] === 'hours') || (list1[2] === 'hour')) {\n              num1 = parseInt(list1[1]) * 60\n            } else if ((list1[2] === 'min') || (list1[2] === 'minutes')) {\n              num1 = parseInt(list1[1])\n            }\n          } else {\n            num1 = parseInt(list1[1]) * 60 + parseInt(list1[3])\n          }\n          var num2 = 0\n          if (list2.length === 3) {\n            if ((list2[2] === 'hours') || (list2[2] === 'hour')) {\n              num2 = parseInt(list2[1]) * 60\n            } else if ((list2[2] === 'min') || (list2[2] === 'minutes')) {\n              num2 = parseInt(list2[1])\n            }\n          } else {\n            num2 = parseInt(list1[2]) * 60 + parseInt(list1[2])\n          }\n          if (num1 < num2) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          var str1 = a.time\n          var str2 = b.time\n          var regexp = /[0-9]+/g\n          var list1 = str1.match(regexp)\n          var list2 = str2.match(regexp)\n          var num1 = 0\n          if (list1.length === 3) {\n            if (list1[2] === 'hours') {\n              num1 = parseInt(list1[1]) * 60\n            } else if ((list1[2] === 'min') || (list1[2] === 'minutes')) {\n              num1 = parseInt(list1[1])\n            }\n          } else {\n            num1 = parseInt(list1[1]) * 60 + parseInt(list1[3])\n          }\n          var num2 = 0\n          if (list2.length === 3) {\n            if (list2[2] === 'hours') {\n              num2 = parseInt(list2[1]) * 60\n            } else if ((list2[2] === 'min') || (list2[2] === 'minutes')) {\n              num2 = parseInt(list2[1])\n            }\n          } else {\n            num2 = parseInt(list1[2]) * 60 + parseInt(list1[2])\n          }\n          if (num1 > num2) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortServing (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          console.log(a.serving)\n          a = roughScale(a.serving, 10)\n          b = roughScale(b.serving, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          a = roughScale(a.serving, 10)\n          b = roughScale(b.serving, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    },\n    onSortCalories (x) {\n      function roughScale (x, base) {\n        const parsed = parseInt(x, base)\n        if (isNaN(parsed)) { return 0 }\n        return parsed * 100\n      }\n      if (x === 'arrow-up') {\n        this.posts.sort(function (a, b) {\n          let num1 = a.calories.replace(/[^\\d.]/g, '')\n          let num2 = b.calories.replace(/[^\\d.]/g, '')\n          a = roughScale(num1, 10)\n          b = roughScale(num2, 10)\n          if (a < b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      } else if (x === 'arrow-down') {\n        this.posts.sort(function (a, b) {\n          let num1 = a.calories.replace(/[^\\d.]/g, '')\n          let num2 = b.calories.replace(/[^\\d.]/g, '')\n          a = roughScale(num1, 10)\n          b = roughScale(num2, 10)\n          if (a > b) {\n            return 1\n          } else {\n            return -1\n          }\n        })\n      }\n      // console.log(this.posts[0])\n      this.currentPosts = this.posts.slice(0, this.pageSize)\n    }\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n#components-pagination-demo-mini .ant-pagination:not(:last-child) {\n  margin-bottom: 24px;}\n\n//  .parent{display:flex;align-items:center;}\n\n.ant-carousel >>> .slick-slide {\n  text-align: center;\n  height: 160px;\n  line-height: 160px;\n  background: #364d79;\n  overflow: hidden;\n}\n\n.ant-carousel >>> .slick-slide h3 {\n  color: #fff;\n}\n</style>\n"]}]}