{"remainingRequest":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow4.vue?vue&type=template&id=89352c36&","dependencies":[{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow4.vue","mtime":1626200635644},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1611951979647},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js","mtime":1611951979647}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-card',{attrs:{\"loading\":_vm.loading,\"title\":\"Post-processing recording\"}},[_c('a-card-grid',{staticStyle:{\"width\":\"30%\",\"text-align\":\"center\"}},[_c('h3',[_vm._v(\" Post-processing recording description \")]),_c('a-list',{attrs:{\"item-layout\":\"horizontal\",\"data-source\":_vm.ListData},scopedSlots:_vm._u([{key:\"renderItem\",fn:function(item){return _c('a-list-item',{},[_c('a-list-item-meta',{attrs:{\"description\":item.content}},[_c('a',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(item.title))])])],1)}}])})],1),_c('a-card-grid',{staticStyle:{\"width\":\"70%\"},attrs:{\"hoverable\":false}},[_c('h3',[_vm._v(\"  Please choose the type of the post-processing if you want \")]),_c('br'),_c('br'),_c('a-collapse',{attrs:{\"accordion\":\"\"}},[_c('a-collapse-panel',{key:\"1\",attrs:{\"header\":\"Get Unit Waveforms\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Get Unit Waveforms\"}},[_c('a-switch',{model:{value:(_vm.form.get_unit_waveforms),callback:function ($$v) {_vm.$set(_vm.form, \"get_unit_waveforms\", $$v)},expression:\"form.get_unit_waveforms\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The sorting extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Sorting\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of unit ids to extract waveforms\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Unit Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.unit_ids),callback:function ($$v) {_vm.$set(_vm.form, \"unit_ids\", $$v)},expression:\"form.unit_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of channels ids to compute waveforms from\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Channel Ids \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"channel_ids\", $$v)},expression:\"form.channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"If True, spike indexes and channel indexes are returned\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Return Idxs \"}},[_c('a-switch',{attrs:{\"placeholder\":\"Default is False\"},model:{value:(_vm.form.return_idxs),callback:function ($$v) {_vm.$set(_vm.form, \"return_idxs\", $$v)},expression:\"form.return_idxs\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Size of chunks in number of samples. If None, it is automatically calculated\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Chunk Size: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is None\"},model:{value:(_vm.form.Chunk_size),callback:function ($$v) {_vm.$set(_vm.form, \"Chunk_size\", $$v)},expression:\"form.Chunk_size\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Size of chunks in Mb\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Chunk Mb: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 500\"},model:{value:(_vm.form.Chunk_mb),callback:function ($$v) {_vm.$set(_vm.form, \"Chunk_mb\", $$v)},expression:\"form.Chunk_mb\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"2\",attrs:{\"header\":\"Get Unit Templates\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Get Unit Templates\"}},[_c('a-switch',{model:{value:(_vm.form.get_unit_templates),callback:function ($$v) {_vm.$set(_vm.form, \"get_unit_templates\", $$v)},expression:\"form.get_unit_templates\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The sorting extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Sorting\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of unit ids to extract maximum channels\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Unit Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.unit_ids),callback:function ($$v) {_vm.$set(_vm.form, \"unit_ids\", $$v)},expression:\"form.unit_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of channels ids to compute amplitudes from\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Channel Ids \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"channel_ids\", $$v)},expression:\"form.channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Use ‘mean’ or ‘median’ to compute templates\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Mode\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'mean' \"},model:{value:(_vm.form.mode),callback:function ($$v) {_vm.$set(_vm.form, \"mode\", $$v)},expression:\"form.mode\"}},[_c('a-select-option',{attrs:{\"value\":\"mean\"}},[_vm._v(\"\\n                          mean\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"Median\"}},[_vm._v(\"\\n                          Median\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Size of chunks in number of samples. If None, it is automatically calculated\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Chunk Size: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is None\"},model:{value:(_vm.form.Chunk_size),callback:function ($$v) {_vm.$set(_vm.form, \"Chunk_size\", $$v)},expression:\"form.Chunk_size\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"3\",attrs:{\"header\":\"Get Unit Amplitudes\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Get Unit Amplitudes\"}},[_c('a-switch',{model:{value:(_vm.form.get_unit_amplitudes),callback:function ($$v) {_vm.$set(_vm.form, \"get_unit_amplitudes\", $$v)},expression:\"form.get_unit_amplitudes\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The sorting extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Sorting\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of unit ids to extract waveforms\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Unit Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.unit_ids),callback:function ($$v) {_vm.$set(_vm.form, \"unit_ids\", $$v)},expression:\"form.unit_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of channels ids to compute waveforms from\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Channel Ids \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"channel_ids\", $$v)},expression:\"form.channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"If True, spike indexes and channel indexes are returned\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Return Idxs \"}},[_c('a-switch',{attrs:{\"placeholder\":\"Default is False\"},model:{value:(_vm.form.return_idxs),callback:function ($$v) {_vm.$set(_vm.form, \"return_idxs\", $$v)},expression:\"form.return_idxs\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"4\",attrs:{\"header\":\"Get Unit Max Channels\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Get Unit Max Channels\"}},[_c('a-switch',{model:{value:(_vm.form.get_unit_max_channels),callback:function ($$v) {_vm.$set(_vm.form, \"get_unit_max_channels\", $$v)},expression:\"form.get_unit_max_channels\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The sorting extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Sorting\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of unit ids to extract maximum channels\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Unit Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.unit_ids),callback:function ($$v) {_vm.$set(_vm.form, \"unit_ids\", $$v)},expression:\"form.unit_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of channels ids to compute max_channels from\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Channel Ids \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"channel_ids\", $$v)},expression:\"form.channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Number of max channels per units to return (default=1)\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Max Channels \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 1\"},model:{value:(_vm.form.max_channels),callback:function ($$v) {_vm.$set(_vm.form, \"max_channels\", $$v)},expression:\"form.max_channels\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Use ‘mean’ or ‘median’ to compute templates\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Mode\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'mean' \"},model:{value:(_vm.form.mode),callback:function ($$v) {_vm.$set(_vm.form, \"mode\", $$v)},expression:\"form.mode\"}},[_c('a-select-option',{attrs:{\"value\":\"mean\"}},[_vm._v(\"\\n                          mean\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"Median\"}},[_vm._v(\"\\n                          Median\\n                        \")])],1)],1)],1)],1)],1),_c('a-collapse-panel',{key:\"5\",attrs:{\"header\":\"Compute Unit PCA Scores\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Compute Unit PCA Scores\"}},[_c('a-switch',{model:{value:(_vm.form.compute_unit_pca_scores),callback:function ($$v) {_vm.$set(_vm.form, \"compute_unit_pca_scores\", $$v)},expression:\"form.compute_unit_pca_scores\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The sorting extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Sorting\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of unit ids to compute pca scores\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Unit Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.unit_ids),callback:function ($$v) {_vm.$set(_vm.form, \"unit_ids\", $$v)},expression:\"form.unit_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of channels ids to compute pca from\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Channel Ids \"}},[_c('a-input',{attrs:{\"placeholder\":\"Input List, default is None\"},model:{value:(_vm.form.channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"channel_ids\", $$v)},expression:\"form.channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of indexes of used spikes for each unit\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Return Idxs \"}},[_c('a-switch',{attrs:{\"placeholder\":\"Default is False\"},model:{value:(_vm.form.return_idxs),callback:function ($$v) {_vm.$set(_vm.form, \"return_idxs\", $$v)},expression:\"form.return_idxs\"}})],1)],1)],1)],1)],1),_c('br'),_c('br'),_c('a-form-model',[_c('a-form-model-item',{attrs:{\"wrapper-col\":{ span:100, offset: 100 }}},[_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"\\n            Confirm\\n          \")]),_c('a-button',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(\"\\n            Next One\\n          \")])],1)],1)],1)],1),_c('a-button',{staticStyle:{\"marginTop\":\"16px\"},on:{\"click\":_vm.handleClick}},[_vm._v(\"\\n    Toggle loading\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}