{"remainingRequest":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow2.vue?vue&type=template&id=663438be&","dependencies":[{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow2.vue","mtime":1626188498696},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1611951979647},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js","mtime":1611951979647}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-card',{attrs:{\"loading\":_vm.loading,\"title\":\"Pre-processing recording\"}},[_c('a-card-grid',{staticStyle:{\"width\":\"30%\",\"text-align\":\"center\"}},[_c('h3',[_vm._v(\" Pre-processing recording description \")]),_c('a-list',{attrs:{\"item-layout\":\"horizontal\",\"data-source\":_vm.ListData},scopedSlots:_vm._u([{key:\"renderItem\",fn:function(item){return _c('a-list-item',{},[_c('a-list-item-meta',{attrs:{\"description\":item.content}},[_c('a',{attrs:{\"slot\":\"title\"},slot:\"title\"},[_vm._v(_vm._s(item.title))])])],1)}}])})],1),_c('a-card-grid',{staticStyle:{\"width\":\"70%\"},attrs:{\"hoverable\":false}},[_c('h3',[_vm._v(\"  Please choose the type of the pre-processing if you want \")]),_c('br'),_c('br'),_c('a-collapse',{attrs:{\"accordion\":\"\"}},[_c('a-collapse-panel',{key:\"1\",attrs:{\"header\":\"Bandpass Filter\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"BandPass Filter: \"}},[_c('a-switch',{model:{value:(_vm.form.BandPass_filter),callback:function ($$v) {_vm.$set(_vm.form, \"BandPass_filter\", $$v)},expression:\"form.BandPass_filter\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"High-pass cutoff frequency\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Freq_min: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 300\"},model:{value:(_vm.form.Freq_min),callback:function ($$v) {_vm.$set(_vm.form, \"Freq_min\", $$v)},expression:\"form.Freq_min\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Low-pass cutoff frequency\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Freq_max: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 6000\"},model:{value:(_vm.form.Freq_max),callback:function ($$v) {_vm.$set(_vm.form, \"Freq_max\", $$v)},expression:\"form.Freq_max\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Width of the filter (when type is ‘fft’)\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Freq_wid: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 1000\"},model:{value:(_vm.form.Freq_wid),callback:function ($$v) {_vm.$set(_vm.form, \"Freq_wid\", $$v)},expression:\"form.Freq_wid\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The ‘fft’ filter uses a kernel in the frequency domain. The ‘butter’ filter uses scipy butter and filtfilt functions\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Filter Type\"}},[_c('a-select',{attrs:{\"placeholder\":\"Default type is 'fft' \"},model:{value:(_vm.form.region),callback:function ($$v) {_vm.$set(_vm.form, \"region\", $$v)},expression:\"form.region\"}},[_c('a-select-option',{attrs:{\"value\":\"fft\"}},[_vm._v(\"\\n                          fft\\n                        \")]),_c('a-select-option',{attrs:{\"value\":\"butter\"}},[_vm._v(\"\\n                          butter\\n                        \")])],1)],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Order of the filter (if ‘butter’)\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Order: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 3\"},model:{value:(_vm.form.Order),callback:function ($$v) {_vm.$set(_vm.form, \"Order\", $$v)},expression:\"form.Order\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The chunk size to be used for the filtering\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Chunk Size: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 300\"},model:{value:(_vm.form.Chunk_size),callback:function ($$v) {_vm.$set(_vm.form, \"Chunk_size\", $$v)},expression:\"form.Chunk_size\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"2\",attrs:{\"header\":\"Notch Filter\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Notch Filter: \"}},[_c('a-switch',{model:{value:(_vm.form.Notch_filter),callback:function ($$v) {_vm.$set(_vm.form, \"Notch_filter\", $$v)},expression:\"form.Notch_filter\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The target frequency of the notch filter\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Freq: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 3000\"},model:{value:(_vm.form.Freq),callback:function ($$v) {_vm.$set(_vm.form, \"Freq\", $$v)},expression:\"form.Freq\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The quality factor of the notch filter\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"q\"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 30\"},model:{value:(_vm.form.q),callback:function ($$v) {_vm.$set(_vm.form, \"q\", $$v)},expression:\"form.q\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The chunk size to be used for the filtering\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Chunk Size: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 300\"},model:{value:(_vm.form.Chunk_size),callback:function ($$v) {_vm.$set(_vm.form, \"Chunk_size\", $$v)},expression:\"form.Chunk_size\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"3\",attrs:{\"header\":\"Remove Bad Channels\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Remove Bad Channels: \"}},[_c('a-switch',{model:{value:(_vm.form.remove_bad_channels),callback:function ($$v) {_vm.$set(_vm.form, \"remove_bad_channels\", $$v)},expression:\"form.remove_bad_channels\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"List of bad channel ids (int). If None, automatic removal will be done based on standard deviation\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Bad Channel Ids: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is None, the type is list\"},model:{value:(_vm.form.Bad_channel_ids),callback:function ($$v) {_vm.$set(_vm.form, \"Bad_channel_ids\", $$v)},expression:\"form.Bad_channel_ids\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"If automatic is used, the threshold for the standard deviation over which channels are removed\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"bad_threshold\"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 2\"},model:{value:(_vm.form.bad_threshold),callback:function ($$v) {_vm.$set(_vm.form, \"bad_threshold\", $$v)},expression:\"form.bad_threshold\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"If automatic is used, the number of seconds used to compute standard deviations\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"seconds: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 10\"},model:{value:(_vm.form.seconds),callback:function ($$v) {_vm.$set(_vm.form, \"seconds\", $$v)},expression:\"form.seconds\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"If True, output is verbose\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Verbose: \"}},[_c('a-switch',{model:{value:(_vm.form.verbose),callback:function ($$v) {_vm.$set(_vm.form, \"verbose\", $$v)},expression:\"form.verbose\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"4\",attrs:{\"header\":\"Transform\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Remove Bad Channels: \"}},[_c('a-switch',{model:{value:(_vm.form.transform),callback:function ($$v) {_vm.$set(_vm.form, \"transform\", $$v)},expression:\"form.transform\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Scalar for the traces of the recording extractor or array with scalars for each channel\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Scale: \"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 1\"},model:{value:(_vm.form.Scale),callback:function ($$v) {_vm.$set(_vm.form, \"Scale\", $$v)},expression:\"form.Scale\"}})],1)],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"Offset for the traces of the recording extractor or array with offsets for each channel\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Offset:\"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 0\"},model:{value:(_vm.form.offset),callback:function ($$v) {_vm.$set(_vm.form, \"offset\", $$v)},expression:\"form.offset\"}})],1)],1)],1)],1),_c('a-collapse-panel',{key:\"5\",attrs:{\"header\":\"Resample\"}},[_c('a-form-model',{attrs:{\"model\":_vm.form,\"label-col\":_vm.labelCol,\"wrapper-col\":_vm.wrapperCol}},[_c('a-form-model-item',{attrs:{\"label\":\"Resample: \"}},[_c('a-switch',{model:{value:(_vm.form.resample_rate),callback:function ($$v) {_vm.$set(_vm.form, \"resample_rate\", $$v)},expression:\"form.resample_rate\"}})],1),_c('a-tooltip',{attrs:{\"placement\":\"topLeft\",\"title\":\"The resample recording extractor\",\"arrow-point-at-center\":\"\"}},[_c('a-form-model-item',{attrs:{\"label\":\"Resample_rate:\"}},[_c('a-input',{attrs:{\"placeholder\":\"Default value is 0\"},model:{value:(_vm.form.resample_rate),callback:function ($$v) {_vm.$set(_vm.form, \"resample_rate\", $$v)},expression:\"form.resample_rate\"}})],1)],1)],1)],1)],1),_c('br'),_c('br'),_c('a-form-model',[_c('a-form-model-item',{attrs:{\"wrapper-col\":{ span:100, offset: 100 }}},[_c('a-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSubmit}},[_vm._v(\"\\n            Confirm\\n          \")]),_c('a-button',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(\"\\n            Next One\\n          \")])],1)],1)],1)],1),_c('a-button',{staticStyle:{\"marginTop\":\"16px\"},on:{\"click\":_vm.handleClick}},[_vm._v(\"\\n    Toggle loading\\n  \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}