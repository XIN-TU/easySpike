{"remainingRequest":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/babel-loader/lib/index.js!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow4.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/src/components/Flow4.vue","mtime":1626623877757},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/package.json","mtime":1615391730967},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/babel-loader/lib/index.js","mtime":1611951976731},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/cache-loader/dist/cjs.js","mtime":1611951979501},{"path":"/Users/xin/Desktop/UoE_S2/MSc/spikeSorting/node_modules/vue-loader/lib/index.js","mtime":1611951979647}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar ListData = [{\n  title: 'Get Unit Waveforms',\n  content: 'Computes the spike waveforms from a recording and sorting extractor. The recording is split in chunks (the size in Mb is set with the chunk_mb argument) and all waveforms are extracted for each chunk and then re-assembled. If multiple jobs are used (n_jobs > 1), more and smaller chunks are created and processed in parallel'\n}, {\n  title: 'Get Unit Templates',\n  content: 'Computes the spike templates from a recording and sorting extractor. If waveforms are not found as features, they are computed.'\n}, {\n  title: 'Get Unit Amplitudes',\n  content: 'Computes the spike amplitudes from a recording and sorting extractor. Amplitudes can be computed in absolute value (uV) or relative to the template amplitude.'\n}, {\n  title: 'Get Unit Max Channels',\n  content: 'Computes the spike maximum channels from a recording and sorting extractor. If templates are not found as property, they are computed'\n}, {\n  title: 'Compute Unit PCA Scores',\n  content: 'Computes the PCA scores from the unit waveforms. If waveforms are not found as features, they are compute'\n}];\nexport default {\n  props: ['current'],\n  data: function data() {\n    return {\n      loading: true,\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 14\n      },\n      form: {\n        get_unit_waveforms: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false,\n        chunk_size: '',\n        chunk_mb: ''\n      },\n      form1: {\n        get_unit_templates: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        mode: '',\n        chunk_size: ''\n      },\n      form2: {\n        get_unit_amplitudes: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false\n      },\n      form3: {\n        get_unit_max_channels: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        max_channels: '',\n        mode: ''\n      },\n      form4: {\n        compute_unit_pca_scores: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false\n      },\n      ListData: ListData\n    };\n  },\n  methods: {\n    handleClick: function handleClick() {\n      this.loading = !this.loading;\n    },\n    onSubmit: function onSubmit() {\n      if (this.form.get_unit_waveforms === true) {\n        if (this.form.sorting === '') {\n          this.form.sorting = 'fft';\n        }\n\n        if (this.form.unit_ids === '') {\n          this.form.unit_ids = 'None';\n        }\n\n        if (this.form.channel_ids === '') {\n          this.form.channel_ids = 'None';\n        }\n\n        if (this.form.chunk_size === '') {\n          this.form.chunk_size = 'None';\n        }\n\n        if (this.form.chunk_mb === '') {\n          this.form.chunk_mb = 500;\n        }\n\n        console.log('submit get_unit_waveforms', this.form);\n      }\n\n      if (this.form1.get_unit_templates === true) {\n        if (this.form1.sorting === '') {\n          this.form1.sorting = 'fft';\n        }\n\n        if (this.form1.unit_ids === '') {\n          this.form1.unit_ids = 'None';\n        }\n\n        if (this.form1.channel_ids === '') {\n          this.form1.channel_ids = 'None';\n        }\n\n        if (this.form1.mode === '') {\n          this.form1.mode = 'mean';\n        }\n\n        if (this.form1.chunk_size === '') {\n          this.form1.chunk_size = 'None';\n        }\n\n        console.log('submit get_unit_templates', this.form1);\n      }\n\n      if (this.form2.get_unit_amplitudes === true) {\n        if (this.form2.sorting === '') {\n          this.form2.sorting = 'fft';\n        }\n\n        if (this.form2.unit_ids === '') {\n          this.form2.unit_ids = 'None';\n        }\n\n        if (this.form2.channel_ids === '') {\n          this.form2.channel_ids = 'None';\n        }\n\n        console.log('submit get_unit_amplitudes', this.form2);\n      }\n\n      if (this.form3.get_unit_max_channels === true) {\n        if (this.form3.sorting === '') {\n          this.form3.sorting = 'fft';\n        }\n\n        if (this.form3.unit_ids === '') {\n          this.form3.unit_ids = 'None';\n        }\n\n        if (this.form3.channel_ids === '') {\n          this.form3.channel_ids = 'None';\n        }\n\n        if (this.form3.max_channels === '') {\n          this.form3.max_channels = 1;\n        }\n\n        if (this.form3.mode === '') {\n          this.form3.mode = 'mean';\n        }\n\n        console.log('submit get_unit_max_channels', this.form3);\n      }\n\n      if (this.form4.compute_unit_pca_scores === true) {\n        if (this.form4.sorting === '') {\n          this.form4.sorting = 'fft';\n        }\n\n        if (this.form4.unit_ids === '') {\n          this.form4.unit_ids = 'None';\n        }\n\n        if (this.form4.channel_ids === '') {\n          this.form4.channel_ids = 'None';\n        }\n\n        console.log('submit compute_unit_pca_scores', this.form4);\n      }\n\n      this.current += 1;\n      this.$emit('changeCurrent', this.current);\n    }\n  }\n};",{"version":3,"sources":["Flow4.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div >\n    <a-card :loading=\"loading\" title=\"Post-processing recording\" >\n    <a-card-grid style=\"width:30%;text-align:center\">\n      <h3> Post-processing recording description </h3>\n      <a-list item-layout=\"horizontal\" :data-source=\"ListData\">\n        <a-list-item slot=\"renderItem\" slot-scope=\"item\">\n          <a-list-item-meta :description= \"item.content\">\n            <a slot=\"title\">{{ item.title }}</a>\n          </a-list-item-meta>\n        </a-list-item>\n      </a-list>\n    </a-card-grid>\n    <a-card-grid style=\"width:70%\" :hoverable=\"false\">\n      <h3>  Please choose the type of the post-processing if you want </h3>\n      <br><br>\n              <a-collapse accordion>\n                <a-collapse-panel key=\"1\" header=\"Get Unit Waveforms\">\n                  <a-form-model :model=\"form\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n                      <a-form-model-item label=\"Get Unit Waveforms\">\n                        <a-switch v-model=\"form.get_unit_waveforms\" />\n                      </a-form-model-item>\n                      <a-tooltip placement=\"topLeft\" title=\"The sorting extractor\" arrow-point-at-center>\n                      <a-form-model-item label=\"Sorting\">\n                        <a-select v-model=\"form.sorting\" placeholder=\"Default type is 'fft' \">\n                          <a-select-option value=\"fft\">\n                            fft\n                          </a-select-option>\n                          <a-select-option value=\"butter\">\n                            butter\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"List of unit ids to extract waveforms\" arrow-point-at-center>\n                      <a-form-model-item label=\"Unit Ids: \">\n                        <a-input v-model=\"form.unit_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of channels ids to compute waveforms from\" arrow-point-at-center>\n                      <a-form-model-item label=\"Channel Ids \">\n                        <a-input v-model=\"form.channel_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"If True, spike indexes and channel indexes are returned\" arrow-point-at-center>\n                      <a-form-model-item label=\"Return Idxs \">\n                        <a-switch v-model=\"form.return_idxs\" placeholder=\"Default is False\"/>\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"Size of chunks in number of samples. If None, it is automatically calculated\" arrow-point-at-center>\n                      <a-form-model-item label=\"Chunk Size: \">\n                        <a-input v-model=\"form.chunk_size\" placeholder=\"Default value is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"Size of chunks in Mb\" arrow-point-at-center>\n                      <a-form-model-item label=\"Chunk Mb: \">\n                        <a-input v-model=\"form.chunk_mb\" placeholder=\"Default value is 500\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                  </a-form-model>\n                </a-collapse-panel>\n                <a-collapse-panel key=\"2\" header=\"Get Unit Templates\">\n                  <a-form-model :model=\"form1\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n                    <a-form-model-item label=\"Get Unit Templates\">\n                        <a-switch v-model=\"form1.get_unit_templates\" />\n                      </a-form-model-item>\n                      <a-tooltip placement=\"topLeft\" title=\"The sorting extractor\" arrow-point-at-center>\n                      <a-form-model-item label=\"Sorting\">\n                        <a-select v-model=\"form1.sorting\" placeholder=\"Default type is 'fft' \">\n                          <a-select-option value=\"fft\">\n                            fft\n                          </a-select-option>\n                          <a-select-option value=\"butter\">\n                            butter\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"List of unit ids to extract maximum channels\" arrow-point-at-center>\n                      <a-form-model-item label=\"Unit Ids: \">\n                        <a-input v-model=\"form1.unit_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of channels ids to compute amplitudes from\" arrow-point-at-center>\n                      <a-form-model-item label=\"Channel Ids \">\n                        <a-input v-model=\"form1.channel_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"Use ‘mean’ or ‘median’ to compute templates\" arrow-point-at-center>\n                      <a-form-model-item label=\"Mode\">\n                        <a-select v-model=\"form1.mode\" placeholder=\"Default type is 'mean' \">\n                          <a-select-option value=\"mean\">\n                            mean\n                          </a-select-option>\n                          <a-select-option value=\"Median\">\n                            Median\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"Size of chunks in number of samples. If None, it is automatically calculated\" arrow-point-at-center>\n                      <a-form-model-item label=\"Chunk Size: \">\n                        <a-input v-model=\"form1.chunk_size\" placeholder=\"Default value is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                  </a-form-model>\n                </a-collapse-panel>\n                <a-collapse-panel key=\"3\" header=\"Get Unit Amplitudes\">\n                  <a-form-model :model=\"form2\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n                      <a-form-model-item label=\"Get Unit Amplitudes\">\n                        <a-switch v-model=\"form2.get_unit_amplitudes\" />\n                      </a-form-model-item>\n                      <a-tooltip placement=\"topLeft\" title=\"The sorting extractor\" arrow-point-at-center>\n                      <a-form-model-item label=\"Sorting\">\n                        <a-select v-model=\"form2.sorting\" placeholder=\"Default type is 'fft' \">\n                          <a-select-option value=\"fft\">\n                            fft\n                          </a-select-option>\n                          <a-select-option value=\"butter\">\n                            butter\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"List of unit ids to extract waveforms\" arrow-point-at-center>\n                      <a-form-model-item label=\"Unit Ids: \">\n                        <a-input v-model=\"form2.unit_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of channels ids to compute waveforms from\" arrow-point-at-center>\n                      <a-form-model-item label=\"Channel Ids \">\n                        <a-input v-model=\"form2.channel_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"If True, spike indexes and channel indexes are returned\" arrow-point-at-center>\n                      <a-form-model-item label=\"Return Idxs \">\n                        <a-switch v-model=\"form2.return_idxs\" placeholder=\"Default is False\"/>\n                      </a-form-model-item>\n                    </a-tooltip>\n                  </a-form-model>\n                </a-collapse-panel>\n                <a-collapse-panel key=\"4\" header=\"Get Unit Max Channels\">\n                  <a-form-model :model=\"form3\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n                      <a-form-model-item label=\"Get Unit Max Channels\">\n                        <a-switch v-model=\"form3.get_unit_max_channels\" />\n                      </a-form-model-item>\n                      <a-tooltip placement=\"topLeft\" title=\"The sorting extractor\" arrow-point-at-center>\n                      <a-form-model-item label=\"Sorting\">\n                        <a-select v-model=\"form3.sorting\" placeholder=\"Default type is 'fft' \">\n                          <a-select-option value=\"fft\">\n                            fft\n                          </a-select-option>\n                          <a-select-option value=\"butter\">\n                            butter\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"List of unit ids to extract maximum channels\" arrow-point-at-center>\n                      <a-form-model-item label=\"Unit Ids: \">\n                        <a-input v-model=\"form3.unit_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of channels ids to compute max_channels from\" arrow-point-at-center>\n                      <a-form-model-item label=\"Channel Ids \">\n                        <a-input v-model=\"form3.channel_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"Number of max channels per units to return (default=1)\" arrow-point-at-center>\n                      <a-form-model-item label=\"Max Channels \">\n                        <a-input v-model=\"form3.max_channels\" placeholder=\"Default value is 1\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"Use ‘mean’ or ‘median’ to compute templates\" arrow-point-at-center>\n                      <a-form-model-item label=\"Mode\">\n                        <a-select v-model=\"form3.mode\" placeholder=\"Default type is 'mean' \">\n                          <a-select-option value=\"mean\">\n                            mean\n                          </a-select-option>\n                          <a-select-option value=\"Median\">\n                            Median\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                  </a-form-model>\n                </a-collapse-panel>\n                <a-collapse-panel key=\"5\" header=\"Compute Unit PCA Scores\">\n                  <a-form-model :model=\"form4\" :label-col=\"labelCol\" :wrapper-col=\"wrapperCol\">\n                      <a-form-model-item label=\"Compute Unit PCA Scores\">\n                        <a-switch v-model=\"form4.compute_unit_pca_scores\" />\n                      </a-form-model-item>\n                      <a-tooltip placement=\"topLeft\" title=\"The sorting extractor\" arrow-point-at-center>\n                      <a-form-model-item label=\"Sorting\">\n                        <a-select v-model=\"form4.sorting\" placeholder=\"Default type is 'fft' \">\n                          <a-select-option value=\"fft\">\n                            fft\n                          </a-select-option>\n                          <a-select-option value=\"butter\">\n                            butter\n                          </a-select-option>\n                        </a-select>\n                      </a-form-model-item>\n                    </a-tooltip>\n                     <a-tooltip placement=\"topLeft\" title=\"List of unit ids to compute pca scores\" arrow-point-at-center>\n                      <a-form-model-item label=\"Unit Ids: \">\n                        <a-input v-model=\"form4.unit_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                     </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of channels ids to compute pca from\" arrow-point-at-center>\n                      <a-form-model-item label=\"Channel Ids \">\n                        <a-input v-model=\"form4.channel_ids\" placeholder=\"Input List, default is None\" />\n                      </a-form-model-item>\n                    </a-tooltip>\n                    <a-tooltip placement=\"topLeft\" title=\"List of indexes of used spikes for each unit\" arrow-point-at-center>\n                      <a-form-model-item label=\"Return Idxs \">\n                        <a-switch v-model=\"form4.return_idxs\" placeholder=\"Default is False\"/>\n                      </a-form-model-item>\n                    </a-tooltip>\n                  </a-form-model>\n                </a-collapse-panel>\n              </a-collapse>\n        <br><br>\n        <a-form-model>\n          <a-form-model-item :wrapper-col=\"{ span:100, offset: 100 }\">\n            <a-button type=\"primary\" @click=\"onSubmit\">\n              Confirm\n            </a-button>\n            <!-- <a-button style=\"margin-left: 10px;\">\n              Next One\n            </a-button> -->\n          </a-form-model-item>\n        </a-form-model>\n    </a-card-grid>\n    </a-card>\n\n    <a-button style=\"marginTop: 16px\" @click=\"handleClick\">\n      Toggle loading\n    </a-button>\n  </div>\n</template>\n\n<script>\nconst ListData = [\n  {\n    title: 'Get Unit Waveforms',\n    content: 'Computes the spike waveforms from a recording and sorting extractor. The recording is split in chunks (the size in Mb is set with the chunk_mb argument) and all waveforms are extracted for each chunk and then re-assembled. If multiple jobs are used (n_jobs > 1), more and smaller chunks are created and processed in parallel'\n  },\n  {\n    title: 'Get Unit Templates',\n    content: 'Computes the spike templates from a recording and sorting extractor. If waveforms are not found as features, they are computed.'\n  },\n  {\n    title: 'Get Unit Amplitudes',\n    content: 'Computes the spike amplitudes from a recording and sorting extractor. Amplitudes can be computed in absolute value (uV) or relative to the template amplitude.'\n  },\n  {\n    title: 'Get Unit Max Channels',\n    content: 'Computes the spike maximum channels from a recording and sorting extractor. If templates are not found as property, they are computed'\n  },\n  {\n    title: 'Compute Unit PCA Scores',\n    content: 'Computes the PCA scores from the unit waveforms. If waveforms are not found as features, they are compute'\n  }\n]\nexport default {\n  props: ['current'],\n  data () {\n    return {\n      loading: true,\n      labelCol: { span: 4 },\n      wrapperCol: { span: 14 },\n      form: {\n        get_unit_waveforms: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false,\n        chunk_size: '',\n        chunk_mb: ''\n\n      },\n      form1: {\n        get_unit_templates: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        mode: '',\n        chunk_size: ''\n      },\n      form2: {\n        get_unit_amplitudes: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false\n      },\n      form3: {\n        get_unit_max_channels: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        max_channels: '',\n        mode: ''\n      },\n      form4: {\n        compute_unit_pca_scores: false,\n        sorting: '',\n        unit_ids: '',\n        channel_ids: '',\n        return_idxs: false\n      },\n      ListData\n    }\n  },\n  methods: {\n    handleClick () {\n      this.loading = !this.loading\n    },\n    onSubmit () {\n      if (this.form.get_unit_waveforms === true) {\n        if (this.form.sorting === '') {\n          this.form.sorting = 'fft'\n        }\n        if (this.form.unit_ids === '') {\n          this.form.unit_ids = 'None'\n        }\n        if (this.form.channel_ids === '') {\n          this.form.channel_ids = 'None'\n        }\n        if (this.form.chunk_size === '') {\n          this.form.chunk_size = 'None'\n        }\n        if (this.form.chunk_mb === '') {\n          this.form.chunk_mb = 500\n        }\n        console.log('submit get_unit_waveforms', this.form)\n      }\n      if (this.form1.get_unit_templates === true) {\n        if (this.form1.sorting === '') {\n          this.form1.sorting = 'fft'\n        }\n        if (this.form1.unit_ids === '') {\n          this.form1.unit_ids = 'None'\n        }\n        if (this.form1.channel_ids === '') {\n          this.form1.channel_ids = 'None'\n        }\n        if (this.form1.mode === '') {\n          this.form1.mode = 'mean'\n        }\n        if (this.form1.chunk_size === '') {\n          this.form1.chunk_size = 'None'\n        }\n        console.log('submit get_unit_templates', this.form1)\n      }\n      if (this.form2.get_unit_amplitudes === true) {\n        if (this.form2.sorting === '') {\n          this.form2.sorting = 'fft'\n        }\n        if (this.form2.unit_ids === '') {\n          this.form2.unit_ids = 'None'\n        }\n        if (this.form2.channel_ids === '') {\n          this.form2.channel_ids = 'None'\n        }\n        console.log('submit get_unit_amplitudes', this.form2)\n      }\n      if (this.form3.get_unit_max_channels === true) {\n        if (this.form3.sorting === '') {\n          this.form3.sorting = 'fft'\n        }\n        if (this.form3.unit_ids === '') {\n          this.form3.unit_ids = 'None'\n        }\n        if (this.form3.channel_ids === '') {\n          this.form3.channel_ids = 'None'\n        }\n        if (this.form3.max_channels === '') {\n          this.form3.max_channels = 1\n        }\n        if (this.form3.mode === '') {\n          this.form3.mode = 'mean'\n        }\n        console.log('submit get_unit_max_channels', this.form3)\n      }\n      if (this.form4.compute_unit_pca_scores === true) {\n        if (this.form4.sorting === '') {\n          this.form4.sorting = 'fft'\n        }\n        if (this.form4.unit_ids === '') {\n          this.form4.unit_ids = 'None'\n        }\n        if (this.form4.channel_ids === '') {\n          this.form4.channel_ids = 'None'\n        }\n        console.log('submit compute_unit_pca_scores', this.form4)\n      }\n      this.current += 1\n      this.$emit('changeCurrent', this.current)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}